# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build
on:
  workflow_call:
    secrets:
      github-token:
        description: |
          The token to use for making authenticated requests to GitHub APIs.
        required: true
    inputs:
      build-config:
        description: |
          The configuration to build for.

          Required input.

          Valid options are:

            * `development`
            * `production`
        type: string
        required: true
      upload-artifacts:
        description: |
          Whether to upload build artifacts.

          Defaults to `true`.
        type: boolean
        required: false
        default: true
      artifact-retention-days:
        description: |
          The number of days to retain uploaded artifacts for.

          Defaults to `0` which defaults to the number configured in the
          repository.
        type: number
        required: false
        default: 0
    outputs:
      artifact-id:
        description: |
          The ID of the artifact generated by this workflow.
        value: ${{jobs.build.outputs.artifact-id}}
      artifact-name:
        description: |
          The name of the artifact generated by this workflow.
        value: ${{jobs.build.outputs.artifact-name}}
      artifact-url:
        description: |
          The URL from which the artifact generated by this workflow can be
          downloaded from.
        value: ${{jobs.build.outputs.artifact-url}}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{steps.upload-artifacts.outputs.artifact-id}}
      artifact-name: dist-${{inputs.build-config}}
      artifact-url: ${{steps.upload-artifacts.outputs.artifact-url}}
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
          lfs: true
          submodules: recursive
      - id: setup-pnpm
        name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - id: setup-nodejs
        name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: ./pnpm-lock.yaml
          token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
      - id: install-dependencies
        name: Install dependencies
        run: |
          pnpm install
      - id: map-build-configuration
        name: Map build configuration
        shell: bash
        run: |
          case "${{inputs.build-config}}" in
            development)
              echo "build-script=build:dev" >> "$GITHUB_OUTPUT";
            ;;
            production)
              echo "build-script=build:prod" >> "$GITHUB_OUTPUT";
            ;;
            *)
              echo "::error::Unknown build configuration '${{inputs.build-config}}'!";
              exit 1;
            ;;
          esac
      - id: build
        name: Build
        run: pnpm run ${{steps.map-build-configuration.outputs.build-script}}
      - id: upload-artifacts
        name: Upload artifacts
        if: inputs.upload-artifacts
        uses: actions/upload-artifact@v5
        with:
          name: dist-${{inputs.build-config}}
          path: ./dist/
          include-hidden-files: true
          if-no-files-found: error
          retention-days: ${{inputs.artifact-retention-days}}
